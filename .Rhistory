dir()
unzip("activity.zip")
activity <- read.csv("activity.csv", header = TRUE)
names(activity)
activity <- activity[, c(2, 3, 1)]
names(activity)
str(activity)
head(activity)
tail(activity)
set.seed(1)
s <- sample(1:nrow(activity), replace = FALSE, size = 10)
activity[sort(s), ]
activity <- mutate(activity, date = as.Date(date, "%Y-%m-%d"))
str(activity)
steps_per_day <- activity %>% group_by(date) %>% summarize(steps = sum(steps, na.rm = TRUE))
steps_per_day
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Histogram of the total number of steps taken each day")
summary(steps_per_day$steps)
daily_pattern <- activity %>% group_by(interval) %>% summarize(steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern) + aes(x = interval, y = steps) + geom_line() +
ggtitle("Average number of steps by 5-minute interval (averaged across all days)")
m <- which.max(daily_pattern$steps)
m
daily_pattern$interval[m]
daily_pattern[daily_pattern$steps == max(daily_pattern$steps), ]
max_steps <- max(daily_pattern$steps)
daily_pattern %>% filter(steps == max_steps)
sum(is.na(activity))
colSums(is.na(activity))
nas_per_date <- activity %>% group_by(date) %>%
summarise(nas = sum(is.na(steps)), num_of_intervals = n())
nas_per_date
table(nas_per_date$nas)
dates_with_nas <- nas_per_date %>% filter(nas > 0)
dates_with_nas
nas_per_interval <- activity %>% group_by(interval) %>%
summarise(nas = sum(is.na(steps)), num_of_dates = n())
nas_per_interval
table(nas_per_interval$nas)
nas_per_interval %>% filter(nas > 0)
median_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
median(my_steps$steps, na.rm = TRUE)
}
mean_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
mean(my_steps$steps, na.rm = TRUE)
}
u <- unique(activity$interval)
u
c1 <- cbind(interval = u, median = sapply(u, median_interval))
c2 <- cbind(interval = u, mean = sapply(u, mean_interval))
as_tibble(c1)
as_tibble(c2)
activity.1 <- activity %>% mutate(steps = ifelse(is.na(steps), median_interval(interval), steps))
sum(is.na(activity))
sum(is.na(activity.1))
activity.2 <- activity %>% mutate(steps = ifelse(is.na(steps), mean_interval(interval), steps))
sum(is.na(activity.2))
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
library(grid)
#library(gridExtra)
lay <- rbind(c(NA, 1, 1, NA),
c(NA, 1, 1, NA),
c(2, 2, 3, 3),
c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
#library(grid)
library(gridExtra)
lay <- rbind(c(NA, 1, 1, NA),
c(NA, 1, 1, NA),
c(2, 2, 3, 3),
c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
ggplot(abs(steps_per_day.1 - steps_per_day), aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Absolute differences with-without median-imputing.")
summary(steps_per_day$steps)
summary(steps_per_day.1$steps)
summary(steps_per_day.2$steps)
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
lay <- rbind(c(NA, 1, 1, NA),
c(NA, 1, 1, NA),
c(2, 2, 3, 3),
c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
lay <- rbind(c(NA, 1, 1, NA), c(NA, 1, 1, NA), c(2, 2, 3, 3), c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
activity.3 <- activity.1
activity.3$day <- as.factor(weekdays(activity.3$date))
activity.3$labor <- ifelse(activity.3$day %in% c("Saturday", "Sunday"), "weekend", "weekday")
activity.3$labor <- as.factor(activity.3$labor)
activity.4 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
Sys.setlocale(locale = "English")
weekday <- c("Saturday", "Sunday")
activity.3 <- activity.1
activity.3$day <- as.factor(weekdays(activity.3$date))
activity.3$labor <- ifelse(activity.3$day %in% c("Saturday", "Sunday"), "weekend", "weekday")
activity.3$labor <- as.factor(activity.3$labor)
activity.4 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
identical(activity.3, activity.4)
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
activity.3
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
class(activity.3)
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekday, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
as_tibble(activity.3)
Q()
Q()
q()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
getwd()
dir()
unzip("activity.zip")
activity <- read.csv("activity.csv", header = TRUE)
names(activity)
activity <- activity[, c(2, 3, 1)]
names(activity)
str(activity)
head(activity)
tail(activity)
set.seed(1)
s <- sample(1:nrow(activity), replace = FALSE, size = 10)
activity[sort(s), ]
activity <- mutate(activity, date = as.Date(date, "%Y-%m-%d"))
str(activity)
steps_per_day <- activity %>% group_by(date) %>% summarize(steps = sum(steps, na.rm = TRUE))
steps_per_day
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Histogram of the total number of steps taken each day")
summary(steps_per_day$steps)
daily_pattern <- activity %>% group_by(interval) %>% summarize(steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern) + aes(x = interval, y = steps) + geom_line() +
ggtitle("Average number of steps by 5-minute interval (averaged across all days)")
m <- which.max(daily_pattern$steps)
m
daily_pattern$interval[m]
daily_pattern[daily_pattern$steps == max(daily_pattern$steps), ]
max_steps <- max(daily_pattern$steps)
daily_pattern %>% filter(steps == max_steps)
sum(is.na(activity))
colSums(is.na(activity))
nas_per_date <- activity %>% group_by(date) %>%
summarise(nas = sum(is.na(steps)), num_of_intervals = n())
nas_per_date
table(nas_per_date$nas)
dates_with_nas <- nas_per_date %>% filter(nas > 0)
dates_with_nas
nas_per_interval <- activity %>% group_by(interval) %>%
summarise(nas = sum(is.na(steps)), num_of_dates = n())
nas_per_interval
table(nas_per_interval$nas)
nas_per_interval %>% filter(nas > 0)
median_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
median(my_steps$steps, na.rm = TRUE)
}
mean_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
mean(my_steps$steps, na.rm = TRUE)
}
u <- unique(activity$interval)
u
c1 <- cbind(interval = u, median = sapply(u, median_interval))
c2 <- cbind(interval = u, mean = sapply(u, mean_interval))
as_tibble(c1)
as_tibble(c2)
activity.1 <- activity %>% mutate(steps = ifelse(is.na(steps), median_interval(interval), steps))
sum(is.na(activity))
sum(is.na(activity.1))
activity.2 <- activity %>% mutate(steps = ifelse(is.na(steps), mean_interval(interval), steps))
sum(is.na(activity.2))
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
lay <- rbind(c(NA, 1, 1, NA), c(NA, 1, 1, NA), c(2, 2, 3, 3), c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
identical(steps_per_day, steps_per_day.1)
summary(steps_per_day$steps)
summary(steps_per_day.1$steps)
summary(steps_per_day.2$steps)
Sys.setlocale(locale = "English")
weekday <- c("Saturday", "Sunday")
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekend, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
Sys.setlocale(locale = "English")
weekend <- c("Saturday", "Sunday")
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekend, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
as_tibble(activity.3)
daily_pattern5 <- activity.3 %>%
group_by(labor, interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern5) +
aes(x = interval, y = avg_steps, color = labor) +
geom_line(size = 1) +
scale_colour_manual(
# values = c(weekday = "#000066", weekend = "#663399")) +
values = c(weekday = "dark blue", weekend = "dark green")) +
facet_wrap(~ labor, ncol = 1) +
# theme(strip.background = element_blank(), strip.text = element_blank())
theme(legend.position = "none")
ggplot(activity.3) + aes(x = interval, y = steps, color = labor) +
geom_line() + facet_wrap(~ labor, ncol = 1, nrow=2)
daily_pattern5 <- activity.3 %>% group_by(labor, interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern5) +
aes(x = interval, y = avg_steps, color = labor) +
geom_line(size = 1) +
scale_colour_manual(values = c(weekday = "dark blue", weekend = "dark green")) +
facet_wrap(~ labor, ncol = 1) +
theme(legend.position = "none")
ggplot(activity.3) +
aes(x = interval, y = steps, color = labor) +
geom_line() +
facet_wrap(~ labor, ncol = 1, nrow=2)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
getwd()
dir()
unzip("activity.zip")
activity <- read.csv("activity.csv", header = TRUE)
names(activity)
activity <- activity[, c(2, 3, 1)]
names(activity)
str(activity)
head(activity)
tail(activity)
set.seed(1)
s <- sample(1:nrow(activity), replace = FALSE, size = 10)
activity[sort(s), ]
activity <- mutate(activity, date = as.Date(date, "%Y-%m-%d"))
str(activity)
steps_per_day <- activity %>% group_by(date) %>% summarize(steps = sum(steps, na.rm = TRUE))
steps_per_day
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Histogram of the total number of steps taken each day")
summary(steps_per_day$steps)
daily_pattern <- activity %>% group_by(interval) %>% summarize(steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern) + aes(x = interval, y = steps) + geom_line() +
ggtitle("Average number of steps by 5-minute interval (averaged across all days)")
m <- which.max(daily_pattern$steps)
m
daily_pattern$interval[m]
daily_pattern[daily_pattern$steps == max(daily_pattern$steps), ]
max_steps <- max(daily_pattern$steps)
daily_pattern %>% filter(steps == max_steps)
sum(is.na(activity))
colSums(is.na(activity))
nas_per_date <- activity %>% group_by(date) %>%
summarise(nas = sum(is.na(steps)), num_of_intervals = n())
nas_per_date
table(nas_per_date$nas)
dates_with_nas <- nas_per_date %>% filter(nas > 0)
dates_with_nas
nas_per_interval <- activity %>% group_by(interval) %>%
summarise(nas = sum(is.na(steps)), num_of_dates = n())
nas_per_interval
table(nas_per_interval$nas)
nas_per_interval %>% filter(nas > 0)
median_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
median(my_steps$steps, na.rm = TRUE)
}
mean_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
mean(my_steps$steps, na.rm = TRUE)
}
u <- unique(activity$interval)
u
c1 <- cbind(interval = u, median = sapply(u, median_interval))
c2 <- cbind(interval = u, mean = sapply(u, mean_interval))
as_tibble(c1)
as_tibble(c2)
activity.1 <- activity %>% mutate(steps = ifelse(is.na(steps), median_interval(interval), steps))
sum(is.na(activity))
sum(is.na(activity.1))
activity.2 <- activity %>% mutate(steps = ifelse(is.na(steps), mean_interval(interval), steps))
sum(is.na(activity.2))
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
lay <- rbind(c(NA, 1, 1, NA), c(NA, 1, 1, NA), c(2, 2, 3, 3), c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
identical(steps_per_day, steps_per_day.1)
summary(steps_per_day$steps)
summary(steps_per_day.1$steps)
summary(steps_per_day.2$steps)
Sys.setlocale(locale = "English")
weekend <- c("Saturday", "Sunday")
cativity.1$date
activity.1$date
table(activity.1$date)
table(activity.3$date)
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekend, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
as_tibble(activity.3)
table(activity.3$date)
head(activity.3)
tail(activity.3)
new_daily_pattern <- activity.3 %>% group_by(labor, interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
new_daily_pattern
ggplot(new_daily_pattern) +
aes(x = interval, y = avg_steps, color = labor) +
geom_line(size = 1) +
scale_colour_manual(values = c(weekday = "dark blue", weekend = "dark green")) +
facet_wrap(~ labor, ncol = 1) +
theme(legend.position = "none")
ggplot(activity.3) +
aes(x = interval, y = steps, color = labor) +
geom_line() +
facet_wrap(~ labor, ncol = 1, nrow=2)
new_daily_pattern <- activity.3 %>% group_by(labor, interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
ggplot(new_daily_pattern) +
aes(x = interval, y = avg_steps, color = labor) +
geom_line(size = 1) +
scale_colour_manual(values = c(weekday = "dark blue", weekend = "dark green")) +
facet_wrap(~ labor, ncol = 1) +
theme(legend.position = "none")
getwd()
setwd("~/Mis Documentos/COURSERA/DATA SCIENCE SPECIALIZATION/05 REPRODUCIBLE RESEARCH/WEEK 2/PROJECT/RepData_PeerAssessment1")
getwd()
q()
getwd()
knit2html("PA1_template.Rmd")
library(knitr)
knit2html("PA1_template.Rmd")
library(rmarkdown)
render("PA1_template.Rmd")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(ggplot2)
library(gridExtra)
getwd()
dir()
unzip("activity.zip")
activity <- read.csv("activity.csv", header = TRUE)
names(activity)
activity <- activity[, c(2, 3, 1)]
names(activity)
str(activity)
head(activity)
tail(activity)
set.seed(1)
s <- sample(1:nrow(activity), replace = FALSE, size = 10)
activity[sort(s), ]
activity <- mutate(activity, date = as.Date(date, "%Y-%m-%d"))
str(activity)
steps_per_day <- activity %>% group_by(date) %>% summarize(steps = sum(steps, na.rm = TRUE))
steps_per_day
ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Histogram of the total number of steps taken each day")
summary(steps_per_day$steps)
daily_pattern <- activity %>% group_by(interval) %>% summarize(steps = mean(steps, na.rm = TRUE))
ggplot(daily_pattern) + aes(x = interval, y = steps) + geom_line() +
ggtitle("Average number of steps by 5-minute interval (averaged across all days)")
m <- which.max(daily_pattern$steps)
m
daily_pattern$interval[m]
daily_pattern[daily_pattern$steps == max(daily_pattern$steps), ]
max_steps <- max(daily_pattern$steps)
daily_pattern %>% filter(steps == max_steps)
sum(is.na(activity))
colSums(is.na(activity))
nas_per_date <- activity %>% group_by(date) %>%
summarise(nas = sum(is.na(steps)), num_of_intervals = n())
nas_per_date
table(nas_per_date$nas)
dates_with_nas <- nas_per_date %>% filter(nas > 0)
dates_with_nas
nas_per_interval <- activity %>% group_by(interval) %>%
summarise(nas = sum(is.na(steps)), num_of_dates = n())
nas_per_interval
table(nas_per_interval$nas)
nas_per_interval %>% filter(nas > 0)
median_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
median(my_steps$steps, na.rm = TRUE)
}
mean_interval <- function(n) {
my_steps <- activity %>% filter(interval == n)
mean(my_steps$steps, na.rm = TRUE)
}
u <- unique(activity$interval)
u
c1 <- cbind(interval = u, median = sapply(u, median_interval))
c2 <- cbind(interval = u, mean = sapply(u, mean_interval))
as_tibble(c1)
as_tibble(c2)
activity.1 <- activity %>% mutate(steps = ifelse(is.na(steps), median_interval(interval), steps))
sum(is.na(activity))
sum(is.na(activity.1))
activity.2 <- activity %>% mutate(steps = ifelse(is.na(steps), mean_interval(interval), steps))
sum(is.na(activity.2))
p  <- ggplot(steps_per_day, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Before imputing missing values.")
steps_per_day.1 <- activity.1 %>% group_by(date) %>% summarise(steps = sum(steps))
p1 <- ggplot(steps_per_day.1, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the median function.")
steps_per_day.2 <- activity.2 %>% group_by(date) %>% summarise(steps = sum(steps))
p2 <- ggplot(steps_per_day.2, aes(x = steps)) +
geom_histogram(binwidth = 2000, color = "black", fill = "white") +
ggtitle("Imputed with the mean function.")
lay <- rbind(c(NA, 1, 1, NA), c(NA, 1, 1, NA), c(2, 2, 3, 3), c(2, 2, 3, 3))
grid.arrange(grobs = list(p, p1, p2), layout_matrix = lay, top = "STEPS PER DAY")
identical(steps_per_day, steps_per_day.1)
summary(steps_per_day$steps)
summary(steps_per_day.1$steps)
summary(steps_per_day.2$steps)
Sys.setlocale(locale = "English")
weekend <- c("Saturday", "Sunday")
activity.3 <- activity.1 %>% mutate(day = as.factor(weekdays(date))) %>%
mutate(labor = ifelse(day %in% weekend, "weekend", "weekday")) %>%
mutate(labor = as.factor(labor))
as_tibble(activity.3)
new_daily_pattern <- activity.3 %>% group_by(labor, interval) %>%
summarise(avg_steps = mean(steps, na.rm = TRUE))
ggplot(new_daily_pattern) +
aes(x = interval, y = avg_steps, color = labor) +
geom_line(size = 1) +
scale_colour_manual(values = c(weekday = "dark blue", weekend = "dark green")) +
facet_wrap(~ labor, ncol = 1) +
theme(legend.position = "none")
render("PA1_template.Rmd")
